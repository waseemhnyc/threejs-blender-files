/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 robot1.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/robot1.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-1.253, 0.927, 0]} scale={[1.5, 0.5, 1]}>
        <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[0.518, 7.022, -0.005]} scale={[0.167, 6, 0.5]}>
          <mesh geometry={nodes.Cube003.geometry} material={nodes.Cube003.material} position={[9.088, 0.228, -0.011]} scale={[8, 0.067, 1]}>
            <mesh geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} position={[0.822, -2.076, 0.006]} rotation={[-Math.PI, 0.627, -Math.PI]} scale={[1.441, 1, 0.854]}>
              <mesh geometry={nodes.Cube004.geometry} material={nodes.Cube004.material} position={[-1.517, -3.543, 0.006]} scale={[0.2, 2.5, 1]}>
                <mesh geometry={nodes.Cube005.geometry} material={nodes.Cube005.material} position={[-0.084, -1.417, -0.006]} scale={[3, 0.4, 1]} />
              </mesh>
            </mesh>
          </mesh>
        </mesh>
        <mesh geometry={nodes.Cylinder.geometry} material={materials['Material.004']} position={[0.564, -0.789, -1.261]} rotation={[Math.PI / 2, 0, 0]} scale={[0.333, 0.25, 1]} />
        <mesh geometry={nodes.Cylinder001.geometry} material={nodes.Cylinder001.material} position={[-0.56, -0.789, 1.259]} rotation={[Math.PI / 2, 0, 0]} scale={[0.333, 0.25, 1]} />
        <mesh geometry={nodes.Cylinder002.geometry} material={nodes.Cylinder002.material} position={[-0.56, -0.789, -1.261]} rotation={[Math.PI / 2, 0, 0]} scale={[0.333, 0.25, 1]} />
        <mesh geometry={nodes.Cylinder003.geometry} material={materials['Material.003']} position={[0.564, -0.789, 1.279]} rotation={[Math.PI / 2, 0, 0]} scale={[0.333, 0.25, 1]} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/robot1.glb')
